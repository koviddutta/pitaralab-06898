// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Fallback to hardcoded values if env vars aren't loaded (Cloud deployment fix)
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || 'https://upugwezzqpxzjxpdxuar.supabase.co';
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVwdWd3ZXp6cXB4emp4cGR4dWFyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTk1NTE4MzAsImV4cCI6MjA3NTEyNzgzMH0.TYQJNuWk-WtkL0c-NLE-7q3P8xoZoApUXtMEDkek52U';

// Lazy-initialized client to avoid errors when env vars aren't loaded yet
let _supabaseClient: ReturnType<typeof createClient<Database>> | null = null;

function getClient() {
  if (!_supabaseClient) {
    if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
      throw new Error('Supabase environment variables are not configured. Please ensure VITE_SUPABASE_URL and VITE_SUPABASE_PUBLISHABLE_KEY are set.');
    }
    
    _supabaseClient = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
      auth: {
        storage: localStorage,
        persistSession: true,
        autoRefreshToken: true,
      }
    });
  }
  return _supabaseClient;
}

// Export a proxy that lazily initializes the client
// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";
export const supabase = new Proxy({} as ReturnType<typeof createClient<Database>>, {
  get(_, prop) {
    const client = getClient();
    const value = (client as any)[prop];
    return typeof value === 'function' ? value.bind(client) : value;
  }
});